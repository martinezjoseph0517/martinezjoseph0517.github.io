[
  {
    "objectID": "september24.html",
    "href": "september24.html",
    "title": "September 24, 2025",
    "section": "",
    "text": "Assignment 1\n1.1 Anscombe’s Examples\n\n\n\n\n\n\n\n\n\nAnscombe, F. J. (1973). Graphs in Statistical Analysis. The American Statistician, 27(1), 17–21. https://doi.org/10.2307/2682899\nAnscombe believes that data visualization can be a powerful tool to make breakthroughs in exploratory data analysis and should not just be limited to the presentation of findings. Instead, Anscombe showcases through these four graphs how the visualization of datasets can help a researcher diagnosis outliers, pattern and correlation recognition, alongside the detection of missing data and/or poor data quality. Visualizations take advantage of the human eyes natural capacity for pattern recognition that is diminished by the overwhelming nature of raw data. In order to implement visualizations to optimize the workflow of a team of analyst, it is essential to build data visualization skills either across the team or have a member of the team specialize in data visualization to improve exploratory data analysis and research.\n1.2 Fall.R: Firebrick Leaf\n\n\n\n\n\n\n\n\n\n1.3 A Critique of an NC State Infographic on Disability Status and Age\n\n\n\nSmith, B. (2022). The Employment of Persons with a Disability and/or Neurodiversity. In ncsu.edu. North Carolina State University Institute for Emerging Issues. https://iei.ncsu.edu/wp-content/uploads/sites/44/2023/02/The-Employment-of-Persons-with-Disabilities-and_or-Neurodiversity.pdf\n\n\n\nI stumbled upon this pie chart on an internet thread of analysts discussing bad and/or dishonest charts. Although not the most atrocious chart when it comes to malice or misinformation, this pie chart out about North Carolina’s disabled population was most definitely the most confusing. Although one can assume that those 65 and older would make up a disproportionately larger part of the population, having the disabled population represented by the out pie chart causes confusion. The disabled population is most definitely smaller than the total population of North Carolina’s total population, yet the disabled population represents the larger outside rim of the chart. To the eye, it would seem intuitive that the outer rim would of represented the total population, and no where in the graphic is there any labels that could prevent this false assumption. It is only while reading the Smith’s corresponding article that one would gain the context necessary to properly read the pie chart. Infographics should be able to tell a story on their own, with corresponding written information merely deepening the understanding a viewer already had of the information conveyed in the infographic.\nA Review of Geoff McGhee’s Journalism in the Age of Data\nData in Journalism vs. Academia\nBy Joseph Martinez\nIn McGhee’s documentary film, “Journalism in the Age of Data,” McGhee has several graphic designers and data journalists at the forefront of the infographic revolution that began at the dawn of the 21st century. Several journalists, such as The New York Times’ Amanda Cox and BBC’s Scott Byrne-Fraser, can showcase how impactful creative data visualizations can be in helping guide the members of the public through information that would otherwise be too abstract or overwhelming to grasp. Cox was able to clearly show the impact race, sex, and education played on unemployment rates over time through an interactive graph that was captivating in its subject matter, approachable in its simplicity, and most importantly impactful because of how it incentivized the reader to interact with the graph to gain the information. Bryne-Fraser expands upon this need for news visualizations to be interactive, leading the reader to the information in steps, starting small, then expanding out. Else, the whole visualization may still overwhelm the reader. This is a concept expanded upon by Nigel Holmes, who explained how impactful visualization becomes once placed in a video format, leading a viewer towards the findings of data.\nMuch of McGhee’s second half of the film explores the clash between two different aspects of journalism, the mission to keep the public informed and the need to create profit. Visualizations can often be beautiful but pointless. Sarah Slobin tells the story of a visualization of the Fortune 500’s revenue designed to create the image of a flower; however, there was almost no practical use one could obtain from the flower—it just looked pretty. Stunning visuals over useful ones are often the ones to be rewarded within the infographic community, as pointed out by journalist Alberto Cairo. And even Bryne-Fraser talks about collaborating more with the television news graphics team at BBC, whom he admits “has a huge skill base in motion graphics, but not necessarily a huge skill base in information graphics.” This runs counter to data visualization in academia, where the primary concern is conveying the data effectively. The message, nor the integrity of the underlying data, cannot be sacrificed to make an academic visualization look more appealing, although a pleasant-looking graphic is still paramount to an academic data visualization."
  },
  {
    "objectID": "october9.html",
    "href": "october9.html",
    "title": "October 8th, 2025",
    "section": "",
    "text": "Assignment 3\n\n### Libraries\nlibrary (ggplot2)\nlibrary (dplyr)\n\n\nAdjuntando el paquete: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary (lubridate)\n\n\nAdjuntando el paquete: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary (scales)\nlibrary (tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats 1.0.1     ✔ stringr 1.5.2\n✔ purrr   1.1.0     ✔ tibble  3.3.0\n✔ readr   2.1.5     ✔ tidyr   1.3.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ readr::col_factor() masks scales::col_factor()\n✖ purrr::discard()    masks scales::discard()\n✖ dplyr::filter()     masks stats::filter()\n✖ dplyr::lag()        masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nowidall &lt;- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/refs/heads/master/public/data/owid-covid-data.csv\")\n\n## Deselect cases/rows with OWID\nowidall &lt;- owidall[!grepl(\"^OWID\", owidall$iso_code), ]\n\n# Subset by continent: Europe\nowideu &lt;- subset(owidall, continent == \"Europe\")\n\n\n# Make sure the date column is in Date format\nowideu$date &lt;- as.Date(owideu$date)\n\n# Filter out 0 Deaths\n\n# Outliers\n#outliers &lt;- outliers %&gt;%\n #group_by(location, year) %&gt;%\n  #filter ((location==\"Spain\" & year == \"2020\" & ))\n\n#labeling\ncountries &lt;- c(\"Germany\", \"Ukraine\", \"Spain\")\n\n#Create the base ggplot\n#ggplot () +\n\n# Scatterplot: Daily COVID deaths in Europe\nplot(\n  owideu$date,\n  owideu$new_deaths,\n  xlab = \"Date\",\n  ylab = \"Daily COVID Deaths\",\n  main = \"Daily COVID Deaths in Europe\",\n  pch = 20,          # small diamonds to make a crisp plot.\n  col = \"red\",\n  family = \"sans\" # set to sans.\n)\n\n# Custom x-axis: month-year\naxis(\n  1,\n  at = seq(min(owideu$date), max(owideu$date), by = \"1 month\"),\n  labels = format(seq(min(owideu$date), max(owideu$date), by = \"1 month\"), \"%m-%Y\"),\n  las = 2  # rotate labels vertically\n )\n\n\n\n\n\n\n\nscale_y_continuous(breaks = c (0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000), limits =c (0, 10000),\n                   labels = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000))\n\n&lt;ScaleContinuousPosition&gt;\n Range:  \n Limits:    0 -- 1e+04"
  },
  {
    "objectID": "October10.html",
    "href": "October10.html",
    "title": "October10",
    "section": "",
    "text": "Chart 1 - Variable-Width Column Chart of Migrant share of population (%)\n\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(dplyr)\n\n\n# Set up properties for the chart\nvw8 &lt;- df |&gt;\n  dplyr::slice_max(order_by = migrants_total, n = 8) |&gt;\n  dplyr::mutate(\n    width_scaled = scales::rescale(sp_pop_totl, to = c(0.4, 1.0))  # keep small bars visible\n  ) |&gt;\n  dplyr::arrange(dplyr::desc(migrants_pct)) |&gt;\n  dplyr::rename(\n    `Abbr` = iso3c,\n    `Total Migrants` = migrants_total,\n    `% Migrants` = migrants_pct,\n    `Total Population` = sp_pop_totl\n  )\nvw8\n\n  Abbr            country Total Migrants % Migrants Total Population\n1  SAU       Saudi Arabia       13071258       42.2         31552510\n2  AUS          Australia        7604850       29.5         25649248\n3  CAN             Canada        8332892       21.8         38028638\n4  DEU            Germany       15021300       18.0         83160871\n5  GBR     United Kingdom       10520870       15.6         66744000\n6  USA      United States       50471028       14.9        331577720\n7  FRA             France        8610719       13.1         67601110\n8  RUS Russian Federation        7297611        5.0        145245148\n  width_scaled\n1    0.4115777\n2    0.4000000\n3    0.4242790\n4    0.5127943\n5    0.4805968\n6    1.0000000\n7    0.4822778\n8    0.6345566\n\n# Create Variable Width Column Chart\np_vw &lt;- ggplot(vw8, aes(x = reorder(country, `% Migrants`),\n                        y = `% Migrants`)) +\n  geom_col(aes(width = width_scaled), fill = \"#54A24B\") +\n  # Create the chart\n  scale_y_continuous(labels = label_number(accuracy = 0.1)) +\n  labs(\n    title = \"Migrant % vs. Total Population (2020)\",\n    subtitle = \"Height = Migrant share of population (%); Width = Total population\",\n    x = NULL,\n    y = \"Migrant share of population (%)\"\n  ) +\n  theme_minimal(base_family = \"serif\") +\n  theme(\n    plot.title.position = \"plot\",\n    panel.grid.minor = element_blank(),\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 8)\n  )\n\np_vw\n\n\n\n\nVariable-Width Column Chart\n\n\n\n\nChart 2 - Table of Migrant Population by Country (2020)\n\n\n\n\n\n\nChart 3 - Bar Charts of Global Migration Overview (2020)\n\n# To create this chart I took inspiration from analyst ___. I used their use of viridis as basis for this code.\n# I took the basis, used patchwork to post both charts side by side & used ChatGPT & forum.posit.co for guidance\n# to solve specific syntax errors.\n\nlibrary(WDI)\nlibrary(tidyverse)\nlibrary(viridis)\nlibrary(janitor)\nlibrary(countrycode)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(patchwork)\n\n#DATA\n# 2020 snapshot: migrants (count + %s) for all countries\nmigration_raw &lt;- WDI(\n  country  = \"all\",\n  indicator = c(\n    migrants_total = \"SM.POP.TOTL\",\n    migrants_pct   = \"SM.POP.TOTL.ZS\"\n  ),\n  start = 2020, end = 2020, extra = TRUE\n)\n\nmigration &lt;- migration_raw %&gt;%\n  clean_names() %&gt;%\n  filter(region != \"Aggregates\") %&gt;% # remove World/income groups\n  mutate(continent = countrycode(iso3c, \"iso3c\", \"continent\"))\n\n\n# Summarize by continent (2020)\n\n  continent_summary &lt;- migration %&gt;%\n  group_by(continent) %&gt;%\n  summarize(\n    avg_migrant_pct = mean(migrants_pct, na.rm = TRUE),\n    total_migrants = sum(migrants_total, na.rm = TRUE)\n  ) %&gt;%\n  arrange(desc(total_migrants))\n  \n  continent_summary\n\n# A tibble: 6 × 3\n  continent avg_migrant_pct total_migrants\n  &lt;chr&gt;               &lt;dbl&gt;          &lt;dbl&gt;\n1 Asia                14.9        83609413\n2 Europe              17.1        82887317\n3 Americas            14.6        72556607\n4 Africa               3.45       24959596\n5 Oceania             16.1         9253374\n6 &lt;NA&gt;                50.6           84087\n\n# Create dataset\n# Average migrant % per continent (2020)\ncontinent_summary_avg &lt;- migration %&gt;%\n  group_by(continent) %&gt;%\n  summarize(avg_migrant_pct = mean(migrants_pct, na.rm = TRUE)) %&gt;%\n  arrange(desc(avg_migrant_pct))\n\ncontinent_summary_avg\n\n# A tibble: 6 × 2\n  continent avg_migrant_pct\n  &lt;chr&gt;               &lt;dbl&gt;\n1 &lt;NA&gt;                50.6 \n2 Europe              17.1 \n3 Oceania             16.1 \n4 Asia                14.9 \n5 Americas            14.6 \n6 Africa               3.45\n\n# Replace NA with \"N/A\"\ncontinent_summary$continent &lt;- ifelse(\n  is.na(continent_summary$continent),\n  \"N/A\",\n  continent_summary$continent\n)\n\n# Convert to factor with alphabetical levels\ncontinent_summary$continent &lt;- factor(\n  continent_summary$continent,\n  levels = sort(unique(continent_summary$continent))\n)\n\ncontinent_levels &lt;- c(setdiff(sort(unique(continent_summary$continent)), \"N/A\"), \"N/A\")\ncontinent_summary$continent &lt;- factor(continent_summary$continent, levels = continent_levels)\n\n\n# Graph 1 Average Migrant %\np1 &lt;- ggplot(continent_summary, aes(x = continent, y = avg_migrant_pct, fill = continent)) +\n  geom_col(width = 0.7) +\n  geom_text(aes(label = paste0(round(avg_migrant_pct, 1), \"%\")),\n            vjust = -0.5, size = 4) +\n  scale_fill_viridis(discrete = TRUE, option = \"E\") +\n  labs(\n    title = \"Average Migrant Percentage by Continent\",\n    x = \"\",\n    y = \"Average % of Population\"\n  ) +\n  ylim(0, 100) +\n  theme_minimal(base_size = 12) +\n  theme(\n        legend.position = \"none\",\n        plot.title = element_text(size = 10, face = \"bold\")\n        )\n\n\n\n#Graph 2 Total Migrants\np2 &lt;- ggplot(continent_summary, aes(x = continent, y = total_migrants / 1e6, fill = continent)) +\n  geom_col(width = 0.7) +\n  geom_text(aes(label = paste0(round(total_migrants / 1e6, 1), \"M\")),\n            vjust = -0.5, size = 4) +\n  scale_fill_viridis(discrete = TRUE, option = \"E\") +\n  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 90, 10)) +\n  labs(\n    title = \"Total Migrant Population by Continent\",\n    x = \"\",\n    y = \"Total Migrants (millions)\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n        legend.position = \"none\",\n        plot.title = element_text(size = 10, face = \"bold\")\n        )\n\n#Final Product\nprint((p1 + p2) + plot_annotation(title = \"Global Migration Overview (2020)\"))\n\n\n\n\n\n\n\n\nChart 4 - Column Chart of Top 8 Countries by International Migrant Stock (2020)\n\noptions(dplyr.summarise.inform = FALSE)\n\nsuppressPackageStartupMessages({\n  library(WDI)\n  library(tidyverse, warn.conflicts = FALSE)  # stops “masked from …” notes\n  library(janitor)\n  library(countrycode)\n  library(ggplot2)\n  library(scales)\n})\n\n\nmigration_raw &lt;- WDI(\n  country = \"all\",\n  indicator = c(\n    migrants_total = \"SM.POP.TOTL\",     # international migrants (count)\n    migrants_pct   = \"SM.POP.TOTL.ZS\"   # migrants as % of population\n  ),\n  start = 2020, end = 2020, extra = TRUE\n)\n\nmigration &lt;- migration_raw |&gt;\n  clean_names() |&gt;\n  filter(region != \"Aggregates\") |&gt;\n  mutate(continent = countrycode(iso3c, \"iso3c\", \"continent\"))\n\n# Top 8 destinations by migrant COUNT\ntop8 &lt;- migration |&gt;\n  filter(!is.na(migrants_total)) |&gt;\n  slice_max(order_by = migrants_total, n = 8) |&gt;\n  arrange(migrants_total) |&gt;         # smallest → largest so bars rise L→R\n  mutate(country = factor(country, levels = country))\n\n\nlight_green &lt;- \"#8BC34A\"\n\np_top8_v &lt;- ggplot(top8, aes(x = country, y = migrants_total)) +\n  geom_col(fill = light_green) +\n  scale_y_continuous(\n    labels = label_number(scale_cut = cut_short_scale()),\n    expand = expansion(mult = c(0, 0.03))\n  ) +\n  labs(\n    title = \"Top 8 Countries by International Migrant Stock (2020)\",\n    subtitle = \"Source: World Bank WDI (SM.POP.TOTL)\",\n    x = NULL, y = \"Migrant Stock (people)\"\n  ) +\n  theme_minimal(base_family = \"serif\") +\n  theme(plot.title.position = \"plot\",\n        panel.grid.minor = element_blank(),\n        axis.text.x = element_text(angle = 45, hjust = 1))\n\np_top8_v\n\n\n\n\n\n\n\n\n\nif (!dir.exists(\"figures\")) dir.create(\"figures\")\nggsave(\"figures/tanmoy_chart4_vertical_lightgreen.png\",\n       plot = p_top8_v, width = 10, height = 6, dpi = 300)"
  },
  {
    "objectID": "homework.html",
    "href": "homework.html",
    "title": "Homework",
    "section": "",
    "text": "Assignments Organized by Due Date\nWelcome to my homework page!\nClick on an assignment below:\n\nSeptember 10th, 2025\nSeptember 24th, 2025 (Assignment 1)\nOctober 2nd, 2025 (Assignment 2)\nOctober 8th, 2025 (Assignment 3)\nOctober 10th, 2025 (Assignment 4)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is the website I created for EPPS 6356 Data Visualization. For more information feel free to reach me at joseph.martinez@utdallas.edu or 210-837-0859."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "The Website of Joseph Martinez",
    "section": "",
    "text": "Hey! I am Joseph Martinez.\nThis is a my Quarto website for EPPS 6356 Data Visualization.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "October2.html",
    "href": "October2.html",
    "title": "October 2nd, 2025",
    "section": "",
    "text": "Assignment 2 (In Progress)\nThe following visualizations are done using data from the happy planet index Explore the data - Happy Planet Index.\nBasic Plot of Life Expectancy vs Carbon Footprint\n\n### Basic Scatter Plot for Life Expectancy vs Carbon Footprint\n# Installing hpi & Load library\n\n\nlibrary(readxl)\nHPI_dataset &lt;- read_excel(\"C:/Users/marti/OneDrive/Desktop/test/HPI_dataset.xlsx\", \n    sheet = \"1. All countries\", \n    range = \"A9:L158\")\n\nNew names:\n• `` -&gt; `...4`\n\nhpi &lt;- HPI_dataset\nView(hpi)\n\nnames(hpi)\n\n [1] \"HPI rank\"                          \"Country\"                          \n [3] \"ISO\"                               \"...4\"                             \n [5] \"Continent\"                         \"Population (thousands)\"           \n [7] \"Life Expectancy (years)\"           \"Ladder of life (Wellbeing) (0-10)\"\n [9] \"Carbon Footprint (tCO2e)\"          \"HPI\"                              \n[11] \"CO2 threshold for year  (tCO2e)\"   \"GDP per capita ($)\"               \n\n## Start plotting from basics \n# Quick look at the variable names\n# names(hpi)\n\n# Clean up column names for easier reference (optional)\ncolnames(hpi) &lt;- make.names(colnames(hpi))\n\n# Extract the columns you need\nx &lt;- hpi$`Life.Expectancy..years.`   # adjust name if slightly different\ny &lt;- hpi$`Carbon.Footprint..tCO2e.`\n\n# Basic sanity check\n# head(cbind(x, y))\n\n# Create scatterplot\nplot(x, y,\n     main = \"Life Expectancy vs Carbon Footprint\",\n     xlab = \"Life Expectancy (years)\",\n     ylab = \"Carbon Footprint (tCO₂e)\",\n     pch = 19, col = \"skyblue\", cex = 1.3)\n\n\n\n\n\n\n\n# Exercise: Can you generate these charts individually?  Try these functions \n# using another dataset. Be sure to work on the layout and margins\n\nScatterplot\n\n# Scatterplot\n# Note the incremental additions\n# Installing hpi & Load library\nlibrary(readxl)\nHPI_dataset &lt;- read_excel(\"C:/Users/marti/OneDrive/Desktop/test/HPI_dataset.xlsx\", \n    sheet = \"1. All countries\", \n    range = \"A9:L158\")\n\nNew names:\n• `` -&gt; `...4`\n\nhpi &lt;- HPI_dataset\nView(hpi)\nnames(hpi)\n\n [1] \"HPI rank\"                          \"Country\"                          \n [3] \"ISO\"                               \"...4\"                             \n [5] \"Continent\"                         \"Population (thousands)\"           \n [7] \"Life Expectancy (years)\"           \"Ladder of life (Wellbeing) (0-10)\"\n [9] \"Carbon Footprint (tCO2e)\"          \"HPI\"                              \n[11] \"CO2 threshold for year  (tCO2e)\"   \"GDP per capita ($)\"               \n\ncolnames(hpi) &lt;- make.names(colnames(hpi))\n\nx &lt;- hpi$`HPI.rank`   # chose to compare HPI rank to a few other factors\ny1 &lt;- hpi$`Carbon.Footprint..tCO2e.` # testing for correlation.\ny2 &lt;- hpi$`Life.Expectancy..years.` # testing for correlation.\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7, bg = \"grey18\") \nplot.new()\n\nplot.window(range(x, na.rm=TRUE), range(c(y1, y2), na.rm=TRUE))\n# What is the first number standing for? The Bottom Axis.\n# X-axis based on HPI rank\naxis(1, at=seq(min(x, na.rm=TRUE), max(x, na.rm=TRUE), by=20), col.axis = \"chartreuse2\")\n\n# Y-axes based on the combined range of y1 and y2\naxis(2, at=seq(0, 90, by=10), col.axis = \"chartreuse2\")\naxis(4, at=seq(0, 90, by=10), col.axis = \"chartreuse2\")\n\nlines(x, y1, col=\"cyan1\", lwd=2)\nlines(x, y2, col=\"violetred2\", lwd=2)\npoints(x, y1, pch=18, cex=2, col=\"cyan1\") # Try different cex value? I did not like any othercex value, so I just changed the pch instead.  \npoints(x, y2, pch=20, bg=\"chartreuse2\", cex=2, col=\"violetred2\")  # Changed background color to grey18.\npar(col=\"chartreuse2\", fg= \"chartreuse2\", col.axis=\"chartreuse2\")\n\nbox(bty=\"u\")\nmtext(\"HPI Rank\", side=1, line=2, cex=0.8)\nmtext(\"Carbon Footprint (tCO2e)\", side=2, line=2, las=0, cex=0.8)\nmtext(\"Life Expectancy (years)\", side=4, line=2, las=0, cex=0.8)\ntext(4, 5, \"Bird 131\")\n\n\n\n\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"chartreuse2\" , fg= \"chartreuse2\", col.axis=\"chartreuse2\")\n\n#I was not really happy with how this turned out, I may redo this again with different variables.\n\nHistogram\n\n# Histogram of Population\nlibrary(readxl)\nHPI_dataset &lt;- read_excel(\"C:/Users/marti/OneDrive/Desktop/test/HPI_dataset.xlsx\", \n    sheet = \"1. All countries\", range = \"A9:L158\")\n\nNew names:\n• `` -&gt; `...4`\n\nhpi &lt;- HPI_dataset\n\nY &lt;- hpi$`Population (thousands)`\nY &lt;- na.omit(Y)\n\n# Use log10 scale because populations vary drastically\nY_log &lt;- log10(Y)\n\n# Plot\npar(bg=\"grey18\", \n    mar=c(4.5, 4.5, 3.1, 1),\n    col.axis=\"chartreuse2\", \n    col.lab=\"chartreuse2\", \n    col.main=\"chartreuse2\")\n\nhist(Y_log,\n     breaks=15,\n     col=\"deepskyblue3\",\n     border=\"white\",\n     freq=FALSE,\n     main=\"Distribution of Country Populations\",\n     xlab=\"Population in thousands\",\n     ylab=\"Density\")\n\nlines(density(Y_log), col=\"chartreuse2\", lwd=2)\nrug(Y_log, col=\"white\")\n\n\n\n\n\n\n\n# I am not yet satisfied with this, may go back and redo.\n\nBarplot\n\n# Barplot\npar(mar=c(2, 3.1, 2, 2.1)) \nmidpts &lt;- barplot(VADeaths, \n                  col=gray(0.1 + seq(1, 9, 2)/11), \n                  names=rep(\"\", 4))\nmtext(sub(\" \", \"\\n\", colnames(VADeaths)),\n      at=midpts, side=1, line=0.5, cex=0.5)\ntext(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,\n     VADeaths, \n     col=rep(c(\"white\", \"black\"), times=3:2), \n     cex=0.8)\n\n\n\n\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1))  \n\nBoxplot\n\n# Boxplot\npar(mar=c(3, 4.1, 2, 0))\nboxplot(len ~ dose, data = ToothGrowth,\n        boxwex = 0.25, at = 1:3 - 0.2,\n        subset= supp == \"VC\", col=\"white\",\n        xlab=\"\",\n        ylab=\"tooth length\", ylim=c(0,35))\nmtext(\"Vitamin C dose (mg)\", side=1, line=2.5, cex=0.8)\nboxplot(len ~ dose, data = ToothGrowth, add = TRUE,\n        boxwex = 0.25, at = 1:3 + 0.2,\n        \n        subset= supp == \"OJ\")\nlegend(1.5, 9, c(\"Ascorbic acid\", \"Orange juice\"), \n       fill = c(\"white\", \"gray\"), \n       bty=\"n\")\n\n\n\n\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\nPersp\n\n# Persp\nx &lt;- seq(-10, 10, length= 30)\ny &lt;- x\nf &lt;- function(x,y) { r &lt;- sqrt(x^2+y^2); 10 * sin(r)/r }\nz &lt;- outer(x, y, f)\nz[is.na(z)] &lt;- 1\n# 0.5 to include z axis label\npar(mar=c(0, 0.5, 0, 0), lwd=0.5)\npersp(x, y, z, theta = 30, phi = 30, \n      expand = 0.5)\n\n\n\n\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)\n\nPiechart\n\n# Piechart\npar(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)\npie.sales &lt;- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)\nnames(pie.sales) &lt;- c(\"Blueberry\", \"Cherry\",\n                      \"Apple\", \"Boston Cream\", \"Other\", \"Vanilla\")\npie(pie.sales, col = gray(seq(0.3,1.0,length=6)))"
  },
  {
    "objectID": "september10.html",
    "href": "september10.html",
    "title": "September 10th, 2025",
    "section": "",
    "text": "A Review of Inge Druckrey’s Teaching to See\nReview by Joseph Martinez\nInge Druckrey was a graphic designer, an abstract artist, a typographer, and above all else, a teacher. She inspired a generation of artists and graphic designers, and the work of her field has left an impression on the likes of Apple Inc. founder and CEO Steve Jobs. Druckrey’s minimalism in her art and designs establishes captivating images, providing inspiration and structure for aspiring data analysts.\nOne of the most crucial lessons an analyst can take from Druckrey’s work is bold minimalism. Druckrey states that when her student’s work is complete, “There is nothing unnecessary.” As an analyst, noise in visualizations could weaken and dilute the conviction behind the story the analyst’s visualization. Druckrey trained this in her students by creating limitations to the organization of their canvases, much in the way a comic book panelist limits the size and frames of their images to enhance, and not sacrifice, the flow of the comic’s story. In the typography of an alphabet, this is done through the careful contrast of thin and thick strokes and curves versus lines. These contrasts become especially important when addressing the paradox of geographic and optical accuracy. For you see, just because two lines are drawn the same length does not mean the lines will appear the same to the eye. Students must be taught how to adjust their typography and designs to appear as intended to be seen, even if this comes at the expense of true geographic accuracy. However, at the end of the day, it is up to the designer of the typography to express their own work.\nFor this reason, Druckrey would always allow her students to just throw an idea onto the canvas. Then, Druckrey would “move in carefully and direct” the student towards a final product. Likewise, each analyst must come up with their own style; it may start off as messy, unkempt, and in need of cultivation, but like a signature, it needs the expression of the analyst.\nData analysts turn numbers into stories. Or as Kris Holmes explains, there is a contrast between what we as people wish to see and what we wish to write. The eye “wants everything perfect and rational”; however, our hands write quickly and with passion. Likewise, when we tell stories with data, although our end product must be neat, concise, and legible to others, it will fail to convey if our passion and expression cannot be felt within the design.\nEven Steve Jobs, who took calligraphy classes as a dropout at Reed College, recognized the importance of these lessons of passion expressed through bold minimalism. He took these lessons and brought them to the design of the first Macintosh computer, describing these computers as “the first computer with beautiful typography.” The simple and bold design of these first household computers is what opened the door to a brand whose simple logo is in the hands of most Americans to this very day.\nThere is a quote from Druckrey that has stuck with me the past few nights as I go about editing this rambling of the bold minimalism she inspires. “Graphic design is always visualizing an idea, and it’s definitely about drawing attention. It’s about informing; it’s about distance reading. But it’s also about symbolizing something, because like poetry, you have to get the essence of something.” I believe this is not just relevant to data visualization and art but also to how we carry about our lives. The signatures we leave upon this world can be chaotic and uncultivated and later in life refined into grand impact. Regardless of our success in challenging our chaos into order, in our hearts, as we express our lives upon the page of our time on this earth, we are poets.\nSource: Severny, A. 2012. Teaching to See. Graphics Press. https://teachingtosee.org/film/TeachingToSee.html"
  },
  {
    "objectID": "cvresume.html",
    "href": "cvresume.html",
    "title": "CV & Resume",
    "section": "",
    "text": "Curriculum Vitae\nYou can download my CV here.\n\n\nOr Click to Show/Hide CV\n\n\n\n\nResume\nYou can download my Resume here.\n\n\nOr Click to Show/Hide Resume"
  }
]